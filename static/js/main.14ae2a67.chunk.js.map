{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","particlesInit","bind","particlesLoaded","main","console","log","container","className","id","init","this","loaded","options","background","color","value","opacity","fullScreen","enable","zIndex","fpsLimit","interactivity","detectsOn","events","onClick","mode","onHover","resize","modes","grab","distance","links","blink","consent","attract","duration","easing","factor","maxSpeed","speed","bubble","size","push","quantity","repulse","particles","width","twinkle","lines","frequency","collisions","move","direction","outMode","random","straight","number","density","value_area","shape","type","detectRetina","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PA+JeA,E,kDAtJb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAJN,E,iDAOnB,SAAcE,GACZC,QAAQC,IAAIF,K,6BAKd,SAAgBG,GACdF,QAAQC,IAAIC,K,oBAGd,WACE,OACE,8BACE,cAAC,IAAD,CAAWC,UAAU,YACnBC,GAAG,cACHC,KAAMC,KAAKV,cACXW,OAAQD,KAAKR,gBACbU,QAAS,CACPC,WAAY,CACVC,MAAO,CACLC,MAAO,OACPC,QAAS,IAGbC,WAAY,CACVC,QAAQ,EACRC,QAAS,GAEXC,SAAU,GACVC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACPN,QAAQ,EACRO,KAAM,WAERC,QAAS,CACPR,QAAQ,EACRO,KAAM,QAERE,QAAQ,GAEVC,MAAO,CACLC,KAAO,CACLC,SAAU,IACVC,MAAQ,CACNC,OAAO,EACPC,SAAS,EACTjB,QAAS,KAGbkB,QAAU,CACRJ,SAAU,IACVK,SAAU,GACVC,OAAQ,gBACRC,OAAQ,EACRC,SAAU,EACVC,MAAO,GAETC,OAAQ,CACNV,SAAU,IACVK,SAAU,EACVnB,QAAS,GACTyB,KAAM,IAERC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPd,SAAU,IACVK,SAAU,MAIhBU,UAAW,CACT/B,MAAO,CACLC,MAAO,WAETgB,MAAO,CACLjB,MAAO,UACPgB,SAAU,IACVZ,QAAQ,EACRF,QAAS,GACT8B,MAAO,GAETC,QAAU,CACRC,MAAQ,CACNlC,MAAO,UACPI,QAAQ,EACR+B,UAAW,MAEbJ,UAAY,CACV/B,MAAO,UACPI,QAAQ,EACR+B,UAAW,OAGfC,WAAY,CACVhC,QAAQ,GAEViC,KAAM,CACJC,UAAW,OACXlC,QAAQ,EACRmC,QAAS,SACTC,QAAQ,EACRf,MAAO,EACPgB,UAAU,GAEZC,OAAQ,CACNC,QAAS,CACPvC,QAAQ,EACRwC,WAAY,KAEd3C,MAAO,IAETC,QAAS,CACPD,MAAO,IAET4C,MAAO,CACLC,KAAM,QAORnB,KAAM,CACJa,QAAQ,EACRvC,MAAO,IAGX8C,cAAc,W,GA3IRC,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.14ae2a67.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Particles from \"react-tsparticles\";\nimport './App.css';\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.particlesInit = this.particlesInit.bind(this);\n    this.particlesLoaded = this.particlesLoaded.bind(this);\n  }\n\n  particlesInit(main) {\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  }\n\n  particlesLoaded(container) {\n    console.log(container);\n  }\n\n  render() {\n    return (\n      <div>\n        <Particles className='particles'\n          id=\"tsparticles\"\n          init={this.particlesInit}\n          loaded={this.particlesLoaded}\n          options={{\n            background: {\n              color: {\n                value: \"#000\",\n                opacity: 1\n              },\n            },\n            fullScreen: {\n              enable: true,\n              zIndex: -1,\n            },\n            fpsLimit: 60,\n            interactivity: {\n              detectsOn: \"window\",\n              events: {\n                onClick: {\n                  enable: true,\n                  mode: \"repulse\",\n                },\n                onHover: {\n                  enable: true,\n                  mode: \"grab\",\n                },\n                resize: true,\n              },\n              modes: {\n                grab : {\n                  distance: 400,\n                  links : {\n                    blink: false,\n                    consent: false,\n                    opacity: 0.5,\n                  }\n                },\n                attract : {\n                  distance: 250,\n                  duration: 0.7,\n                  easing: 'ease-out-quad',\n                  factor: 1,\n                  maxSpeed: 5,\n                  speed: 2,\n                },\n                bubble: {\n                  distance: 400,\n                  duration: 2,\n                  opacity: 0.8,\n                  size: 40,\n                },\n                push: {\n                  quantity: 4,\n                },\n                repulse: {\n                  distance: 200,\n                  duration: 0.4,\n                },\n              },\n            },\n            particles: {\n              color: {\n                value: \"#00fbff\",\n              },\n              links: {\n                color: \"#00fffb\",\n                distance: 150,\n                enable: true,\n                opacity: 0.9,\n                width: 1,\n              },\n              twinkle : {\n                lines : {\n                  color: '#00fbff',\n                  enable: true,\n                  frequency: 0.001,\n                },\n                particles : {\n                  color: '#00fbff',\n                  enable: true,\n                  frequency: 0.001,\n                }\n              },\n              collisions: {\n                enable: true,\n              },\n              move: {\n                direction: \"none\",\n                enable: true,\n                outMode: \"bounce\",\n                random: false,\n                speed: 2,\n                straight: false,\n              },\n              number: {\n                density: {\n                  enable: true,\n                  value_area: 800,\n                },\n                value: 80,\n              },\n              opacity: {\n                value: 0.5,\n              },\n              shape: {\n                type: \"line\",\n                // image : {\n                //   src: \"https://img.icons8.com/nolan/64/winter.png\",\n                //   width: 64,\n                //   height: 64,\n                // }\n              },\n              size: {\n                random: true,\n                value: 5,\n              },\n            },\n            detectRetina: true,\n          }}\n        />\n        {/* <NavigationDisabled />\n        <NavigationEnabled />\n        <Logo />\n        <WelcomeInfromation />\n        <SignupLink /> */}\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n// const particlesOptions = {\n\n// }\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       {/* <Particles /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}